<?xml version='1.0' encoding='UTF-8'?>
<profile>
	<name>EC-hybris-Groovy</name>
	<language>grvy</language>
	<rules>
		<rule>
			<repositoryKey>common-grvy</repositoryKey>
			<key>FailedUnitTests</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>common-grvy</repositoryKey>
			<key>SkippedUnitTests</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.AssignmentInConditionalRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.BrokenNullCheckRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.ComparisonOfTwoConstantsRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.ComparisonWithSelfRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.ConstantAssertExpressionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.ConstantIfExpressionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.ConstantTernaryExpressionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.DeadCodeRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyCatchBlockRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreRegex</key>
					<value>ignore|ignored</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyClassRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyElseBlockRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyFinallyBlockRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyForStatementRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyIfStatementRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyInstanceInitializerRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyMethodRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyStaticInitializerRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptySwitchStatementRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptySynchronizedStatementRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyTryBlockRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.EmptyWhileStatementRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.RandomDoubleCoercedToZeroRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.basic.RemoveAllOnSelfRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocConsecutiveEmptyLinesRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyAuthorTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyExceptionTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyFirstLineRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyLastLineRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyParamTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyReturnTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptySeeTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptySinceTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyThrowsTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocEmptyVersionTagRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocMissingExceptionDescriptionRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocMissingParamDescriptionRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.comments.JavadocMissingThrowsDescriptionRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>allowMultiline</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.ConfusingTernaryRule</key>
			<priority>MAJOR</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.CouldBeElvisRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.CouldBeSwitchStatementRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.HashtableIsObsoleteRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.InvertedConditionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.InvertedIfElseRule</key>
			<priority>MAJOR</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.ParameterReassignmentRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.StaticFieldsBeforeInstanceFieldsRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.TernaryCouldBeElvisRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.convention.VectorIsObsoleteRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.enhanced.MissingOverrideAnnotationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchArrayIndexOutOfBoundsExceptionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchErrorRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchIllegalMonitorStateExceptionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchIndexOutOfBoundsExceptionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchNullPointerExceptionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchRuntimeExceptionRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.exceptions.CatchThrowableRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterCatchRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterClosingBraceRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>checkClosureMapEntryValue</key>
					<value>true</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterCommaRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterForRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterIfRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterOpeningBraceRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreEmptyBlock</key>
					<value>true</value>
				</parameter>
				<parameter>
					<key>checkClosureMapEntryValue</key>
					<value>true</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterSemicolonRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterSwitchRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAfterWhileRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAroundClosureArrowRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceAroundOperatorRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreParameterDefaultValueAssignments</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceBeforeClosingBraceRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreEmptyBlock</key>
					<value>true</value>
				</parameter>
				<parameter>
					<key>checkClosureMapEntryValue</key>
					<value>true</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.SpaceBeforeOpeningBraceRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>checkClosureMapEntryValue</key>
					<value>true</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.formatting.TrailingWhitespaceRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.groovyism.CollectAllIsDeprecatedRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.groovyism.GroovyLangImmutableRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.DuplicateImportRule</key>
			<priority>MAJOR</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.ImportFromSamePackageRule</key>
			<priority>MAJOR</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.ImportFromSunPackagesRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.MisorderedStaticImportsRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>comesBefore</key>
					<value>true</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.NoWildcardImportsRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreImports</key>
					<value>false</value>
				</parameter>
				<parameter>
					<key>ignoreStaticImports</key>
					<value>false</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.UnnecessaryGroovyImportRule</key>
			<priority>MAJOR</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.imports.UnusedImportRule</key>
			<priority>MAJOR</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.naming.ObjectOverrideMisspelledMethodNameRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.security.InsecureRandomRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.security.ObjectFinalizeRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.security.PublicFinalizeMethodRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.security.UnsafeArrayDeclarationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.security.UnsafeImplementationAsMapRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.serialization.EnumCustomSerializationIgnoredRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.serialization.SerialPersistentFieldsRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.serialization.SerialVersionUIDRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.size.ClassSizeRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>maxLines</key>
					<value>750</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.size.MethodSizeRule.fixed</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>maxLines</key>
					<value>75</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryBigDecimalInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryBigIntegerInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryBooleanInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryDoubleInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryFloatInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryInstantiationToGetClassRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryIntegerInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryLongInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryPackageReferenceRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessarySemicolonRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unnecessary.UnnecessaryStringInstantiationRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedArrayRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedMethodParameterRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreRegex</key>
					<value>^(ignore|ignored)[0-9]*$</value>
				</parameter>
				<parameter>
					<key>ignoreClassRegex</key>
					<value>.*Category</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedObjectRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedPrivateFieldRule</key>
			<priority>INFO</priority>
			<parameters>
				<parameter>
					<key>ignoreFieldNames</key>
					<value>serialVersionUID</value>
				</parameter>
			</parameters>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedPrivateMethodParameterRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedPrivateMethodRule</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
		<rule>
			<repositoryKey>grvy</repositoryKey>
			<key>org.codenarc.rule.unused.UnusedVariableRule.fixed</key>
			<priority>INFO</priority>
			<parameters/>
		</rule>
	</rules>
</profile>